$date
	Tue Apr  3 19:07:09 2018
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module Mips_tb $end
$var reg 1 ! clk $end
$var reg 11 " i [10:0] $end
$var reg 1 # rst $end
$scope module U_mips $end
$var wire 1 ! clock $end
$var wire 1 $ pRegWrite $end
$var wire 1 # reset $end
$var wire 1 % WB_last_memToReg $end
$var wire 32 & WB_last_memOut [31:0] $end
$var wire 32 ' WB_last_aluOut [31:0] $end
$var wire 32 ( WB_ID_writeBack [31:0] $end
$var wire 5 ) WB_ID_gprWriteAddr [4:0] $end
$var wire 1 * WB_ID_gprWrite $end
$var wire 1 + M_last_zero $end
$var wire 1 , M_last_regW $end
$var wire 1 - M_last_pcSel $end
$var wire 1 . M_last_memW $end
$var wire 1 / M_last_memToR $end
$var wire 1 0 M_last_memR $end
$var wire 5 1 M_last_gprDes [4:0] $end
$var wire 32 2 M_last_gprB [31:0] $end
$var wire 32 3 M_last_aluResult [31:0] $end
$var wire 32 4 M_dmResult_next [31:0] $end
$var wire 1 5 M_IF_doBranch $end
$var wire 32 6 M_IF_BPC [31:0] $end
$var wire 32 7 IF_pc_return [31:0] $end
$var wire 32 8 IF_pc_im [31:0] $end
$var wire 32 9 IF_ir_next [31:0] $end
$var wire 6 : ID_shamt_next [5:0] $end
$var wire 5 ; ID_rt_gpr [4:0] $end
$var wire 5 < ID_rs_gpr [4:0] $end
$var wire 1 = ID_regDst_next $end
$var wire 5 > ID_rd_gpr [4:0] $end
$var wire 1 ? ID_pcSel_next $end
$var wire 6 @ ID_opcode_ctrl [5:0] $end
$var wire 1 A ID_memW_next $end
$var wire 1 B ID_memToR_next $end
$var wire 1 C ID_memR_next $end
$var wire 32 D ID_last_PC [31:0] $end
$var wire 32 E ID_last_IR [31:0] $end
$var wire 16 F ID_imm_ext [15:0] $end
$var wire 32 G ID_gprB_next [31:0] $end
$var wire 32 H ID_gprA_next [31:0] $end
$var wire 6 I ID_funct_ctrl [5:0] $end
$var wire 2 J ID_extop_ext [1:0] $end
$var wire 32 K ID_extended_next [31:0] $end
$var wire 1 L ID_aluSrc_next $end
$var wire 5 M ID_aluCtrl_next [4:0] $end
$var wire 1 N ID_RegW_next $end
$var wire 5 O EX_muxR_next [4:0] $end
$var wire 32 P EX_muxB_alu [31:0] $end
$var wire 5 Q EX_last_rt_mux [4:0] $end
$var wire 1 R EX_last_regW $end
$var wire 1 S EX_last_regDst_muxR $end
$var wire 5 T EX_last_rd_mux [4:0] $end
$var wire 1 U EX_last_pcSel $end
$var wire 1 V EX_last_memW $end
$var wire 1 W EX_last_memToR $end
$var wire 1 X EX_last_memR $end
$var wire 32 Y EX_last_gprB_muxB [31:0] $end
$var wire 32 Z EX_last_gprA_alu [31:0] $end
$var wire 32 [ EX_last_ext [31:0] $end
$var wire 1 \ EX_last_aluSrc_muxB $end
$var wire 32 ] EX_last_PC [31:0] $end
$var wire 32 ^ EX_branchAddr_next [31:0] $end
$var wire 1 _ EX_aluZero_next $end
$var wire 32 ` EX_aluResult_next [31:0] $end
$var wire 5 a EX_aluCtrl_alu [4:0] $end
$scope module ALU $end
$var wire 32 b DataIn2 [31:0] $end
$var wire 32 c DataIn1 [31:0] $end
$var wire 5 d AluCtrl [4:0] $end
$var reg 32 e AluResult [31:0] $end
$var reg 1 _ Zero $end
$var reg 32 f temp [31:0] $end
$upscope $end
$scope module DMEM $end
$var wire 5 g DataAdr [4:0] $end
$var wire 32 h DataOut [31:0] $end
$var wire 1 ! clk $end
$var wire 32 i DataIn [31:0] $end
$var wire 1 . DMemW $end
$var wire 1 0 DMemR $end
$upscope $end
$scope module ELOHIM $end
$var wire 6 j OpCode [5:0] $end
$var wire 6 k funct [5:0] $end
$var reg 1 l AluShift $end
$var reg 5 m Aluctrl [4:0] $end
$var reg 1 L Alusrc $end
$var reg 1 ? Branch $end
$var reg 2 n ExtOp [1:0] $end
$var reg 1 B Mem2R $end
$var reg 1 C MemR $end
$var reg 1 A MemW $end
$var reg 1 o NBranch $end
$var reg 1 = RegDst $end
$var reg 1 N RegW $end
$var reg 1 p jump $end
$upscope $end
$scope module EXT $end
$var wire 16 q DataIn [15:0] $end
$var wire 2 r ExtOp [1:0] $end
$var reg 32 s ExtOut [31:0] $end
$upscope $end
$scope module PC_UNIT $end
$var wire 1 ! Clk $end
$var wire 1 # PcReSet $end
$var wire 1 5 PcSel $end
$var wire 32 t nextPC [31:0] $end
$var wire 32 u branchAddr [31:0] $end
$var reg 32 v PC [31:0] $end
$upscope $end
$scope module P_EXMEM $end
$var wire 32 w BPC_in [31:0] $end
$var wire 1 $ Write $end
$var wire 32 x aluOut_in [31:0] $end
$var wire 1 ! clk $end
$var wire 5 y gprDes_in [4:0] $end
$var wire 1 # rst $end
$var wire 1 _ zero_in $end
$var wire 1 R regW_in $end
$var wire 1 U pcSel_in $end
$var wire 1 V memW_in $end
$var wire 1 W memToR_in $end
$var wire 1 X memR_in $end
$var wire 32 z gprB_in [31:0] $end
$var reg 32 { BPC_out [31:0] $end
$var reg 32 | aluOut_out [31:0] $end
$var reg 32 } gprB_out [31:0] $end
$var reg 5 ~ gprDes_out [4:0] $end
$var reg 1 0 memR_out $end
$var reg 1 / memToR_out $end
$var reg 1 . memW_out $end
$var reg 1 - pcSel_out $end
$var reg 1 , regW_out $end
$var reg 1 + zero_out $end
$upscope $end
$scope module P_GPR $end
$var wire 5 !" ReSel1 [4:0] $end
$var wire 5 "" ReSel2 [4:0] $end
$var wire 32 #" WData [31:0] $end
$var wire 1 ! clk $end
$var wire 5 $" WeSel [4:0] $end
$var wire 1 * WE $end
$var wire 32 %" DataOut2 [31:0] $end
$var wire 32 &" DataOut1 [31:0] $end
$upscope $end
$scope module P_IDEX $end
$var wire 5 '" ALUop_in [4:0] $end
$var wire 1 L ALUsrc_in $end
$var wire 1 ? Branch_in $end
$var wire 1 C Mread_in $end
$var wire 1 B MtoR_in $end
$var wire 1 A Mwrite_in $end
$var wire 1 = RegDst_in $end
$var wire 1 N RegWrite_in $end
$var wire 1 $ Write $end
$var wire 1 ! clk $end
$var wire 32 (" ext_in [31:0] $end
$var wire 32 )" gprA_in [31:0] $end
$var wire 32 *" gprB_in [31:0] $end
$var wire 5 +" rd_in [4:0] $end
$var wire 1 # rst $end
$var wire 5 ," rt_in [4:0] $end
$var wire 32 -" PC_in [31:0] $end
$var reg 5 ." ALUop_out [4:0] $end
$var reg 1 \ ALUsrc_out $end
$var reg 1 U Branch_out $end
$var reg 1 X Mread_out $end
$var reg 1 W MtoR_out $end
$var reg 1 V Mwrite_out $end
$var reg 32 /" PC_out [31:0] $end
$var reg 1 S RegDst_out $end
$var reg 1 R RegWrite_out $end
$var reg 32 0" ext_out [31:0] $end
$var reg 32 1" gprA_out [31:0] $end
$var reg 32 2" gprB_out [31:0] $end
$var reg 5 3" rd_out [4:0] $end
$var reg 5 4" rt_out [4:0] $end
$upscope $end
$scope module P_IFID $end
$var wire 32 5" PC_in [31:0] $end
$var wire 1 $ Write $end
$var wire 1 ! clk $end
$var wire 1 # rst $end
$var wire 32 6" IR_in [31:0] $end
$var reg 32 7" IR_out [31:0] $end
$var reg 32 8" PC_out [31:0] $end
$upscope $end
$scope module P_IM $end
$var wire 5 9" ImAdress [4:0] $end
$var wire 32 :" OpCode [31:0] $end
$var reg 32 ;" Opcode [31:0] $end
$upscope $end
$scope module P_MEMWB $end
$var wire 1 $ Write $end
$var wire 32 <" aluOut_in [31:0] $end
$var wire 1 ! clk $end
$var wire 5 =" gprDes_in [4:0] $end
$var wire 32 >" memOut_in [31:0] $end
$var wire 1 / memToR_in $end
$var wire 1 , regW_in $end
$var wire 1 # rst $end
$var reg 32 ?" aluOut_mid [31:0] $end
$var reg 32 @" aluOut_out [31:0] $end
$var reg 5 A" gprDes_mid [4:0] $end
$var reg 5 B" gprDes_out [4:0] $end
$var reg 32 C" memOut_mid [31:0] $end
$var reg 32 D" memOut_out [31:0] $end
$var reg 1 E" memToR_mid $end
$var reg 1 % memToR_out $end
$var reg 1 F" regW_mid $end
$var reg 1 * regW_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module mux16 $end
$var wire 8 G" d0 [7:0] $end
$var wire 8 H" d1 [7:0] $end
$var wire 8 I" d10 [7:0] $end
$var wire 8 J" d11 [7:0] $end
$var wire 8 K" d12 [7:0] $end
$var wire 8 L" d13 [7:0] $end
$var wire 8 M" d14 [7:0] $end
$var wire 8 N" d15 [7:0] $end
$var wire 8 O" d2 [7:0] $end
$var wire 8 P" d3 [7:0] $end
$var wire 8 Q" d4 [7:0] $end
$var wire 8 R" d5 [7:0] $end
$var wire 8 S" d6 [7:0] $end
$var wire 8 T" d7 [7:0] $end
$var wire 8 U" d8 [7:0] $end
$var wire 8 V" d9 [7:0] $end
$var wire 4 W" s [3:0] $end
$var wire 8 X" y [7:0] $end
$var reg 8 Y" y_r [7:0] $end
$upscope $end
$scope module mux2 $end
$var wire 8 Z" d0 [7:0] $end
$var wire 8 [" d1 [7:0] $end
$var wire 1 \" s $end
$var wire 8 ]" y [7:0] $end
$upscope $end
$scope module mux4 $end
$var wire 8 ^" d0 [7:0] $end
$var wire 8 _" d1 [7:0] $end
$var wire 8 `" d2 [7:0] $end
$var wire 8 a" d3 [7:0] $end
$var wire 2 b" s [1:0] $end
$var wire 8 c" y [7:0] $end
$var reg 8 d" y_r [7:0] $end
$upscope $end
$scope module mux8 $end
$var wire 8 e" d0 [7:0] $end
$var wire 8 f" d1 [7:0] $end
$var wire 8 g" d2 [7:0] $end
$var wire 8 h" d3 [7:0] $end
$var wire 8 i" d4 [7:0] $end
$var wire 8 j" d5 [7:0] $end
$var wire 8 k" d6 [7:0] $end
$var wire 8 l" d7 [7:0] $end
$var wire 3 m" s [2:0] $end
$var wire 8 n" y [7:0] $end
$var reg 8 o" y_r [7:0] $end
$upscope $end
$enddefinitions $end
#250
$dumpvars
bx o"
bx n"
bz m"
bz l"
bz k"
bz j"
bz i"
bz h"
bz g"
bz f"
bz e"
bx d"
bx c"
bz b"
bz a"
bz `"
bz _"
bz ^"
bz ]"
z\"
bz ["
bz Z"
bx Y"
bx X"
bz W"
bz V"
bz U"
bz T"
bz S"
bz R"
bz Q"
bz P"
bz O"
bz N"
bz M"
bz L"
bz K"
bz J"
bz I"
bz H"
bz G"
xF"
xE"
bx D"
bx C"
bx B"
bx A"
bx @"
bx ?"
bx >"
bx ="
b0 <"
b110100000000010000000000000000 ;"
b110100000000010000000000000000 :"
b0 9"
b11000000000100 8"
b110100000000010000000000000000 7"
b110100000000010000000000000000 6"
b11000000000100 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
b11000000000100 /"
bx ."
b11000000000100 -"
b1 ,"
b0 +"
bx *"
b0 )"
b0 ("
b110 '"
b0 &"
bx %"
bx $"
bx #"
b1 ""
b0 !"
bx ~
bx }
b0 |
bx {
bx z
bx y
b0 x
bx w
b11000000000000 v
bx u
b11000000000100 t
b0 s
b0 r
b0 q
0p
0o
b0 n
b110 m
0l
b0 k
b1101 j
bx i
bx h
b0 g
b0 f
b0 e
bx d
bx c
bx b
bx a
b0 `
0_
bx ^
b11000000000100 ]
x\
bx [
bx Z
bx Y
xX
xW
xV
xU
bx T
xS
xR
bx Q
bx P
bx O
1N
b110 M
1L
b0 K
b0 J
b0 I
b0 H
bx G
b0 F
b110100000000010000000000000000 E
b11000000000100 D
0C
0B
0A
b1101 @
0?
b0 >
1=
b0 <
b1 ;
b0 :
b110100000000010000000000000000 9
b11000000000000 8
b11000000000100 7
bx 6
05
bx 4
b0 3
bx 2
bx 1
x0
x/
x.
x-
x,
0+
x*
bx )
bx (
bx '
bx &
x%
1$
0#
b10100 "
1!
$end
#500
b0 ?"
0!
#1000
b0 '
b0 @"
b0 9
b0 6"
b0 :"
b0 ;"
b1 9"
b11000000000100 ^
b11000000000100 w
b0 P
b0 b
1_
b0 `
b0 e
b0 x
b1 O
b1 y
b11000000001000 7
b11000000001000 t
b11000000001000 5"
b11000000000100 8
b11000000000100 v
b0 [
b0 0"
0W
1R
0V
0X
0U
1\
b110 a
b110 d
b110 ."
1S
b0 Z
b0 c
b0 1"
b1 Q
b1 4"
b0 T
b0 3"
1!
#1500
0!
#2000
b0 G
b0 %"
b0 *"
b10001 M
b10001 m
b10001 '"
1l
0L
0=
b10 9"
b0 ;
b0 ""
b0 ,"
b0 @
b0 j
b11000000001100 7
b11000000001100 t
b11000000001100 5"
b11000000001000 8
b11000000001000 v
0/
1,
0.
00
0-
1+
b1 1
b1 ~
b1 ="
b11000000001000 6
b11000000001000 u
b11000000001000 {
b11000000001000 ^
b11000000001000 w
b11000000001000 ]
b11000000001000 /"
b0 E
b0 7"
b11000000001000 D
b11000000001000 -"
b11000000001000 8"
1!
#2500
0E"
1F"
b1 A"
0!
#3000
b0 (
b0 #"
0%
1*
b1 )
b1 $"
b1 B"
b10000001000000000000000000100 9
b10000001000000000000000000100 6"
b10000001000000000000000000100 :"
b10000001000000000000000000100 ;"
b11 9"
b0 O
b0 y
b11000000010000 7
b11000000010000 t
b11000000010000 5"
b11000000001100 8
b11000000001100 v
b11000000001100 D
b11000000001100 -"
b11000000001100 8"
0\
b10001 a
b10001 d
b10001 ."
0S
b0 Y
b0 z
b0 2"
b0 Q
b0 4"
1!
#3500
0!
#4000
b0 9
b0 6"
b0 :"
b0 ;"
b100 K
b100 s
b100 ("
b0 H
b0 &"
b0 )"
b1 J
b1 n
b1 r
b11 M
b11 m
b11 '"
0l
0N
1=
1?
b100 9"
b100 F
b100 q
b1 <
b1 !"
b100 I
b100 k
b100 @
b100 j
b11000000010100 7
b11000000010100 t
b11000000010100 5"
b11000000010000 8
b11000000010000 v
b0 2
b0 i
b0 }
b0 1
b0 ~
b0 ="
b11000000010000 6
b11000000010000 u
b11000000010000 {
b11000000010000 ^
b11000000010000 w
b11000000010000 ]
b11000000010000 /"
b10000001000000000000000000100 E
b10000001000000000000000000100 7"
b11000000010000 D
b11000000010000 -"
b11000000010000 8"
1!
#4500
b0 A"
0!
#5000
b0 )
b0 $"
b0 B"
b0 K
b0 s
b0 ("
1N
b10001 M
b10001 m
b10001 '"
1l
b0 J
b0 n
b0 r
0=
0?
b101 9"
b0 F
b0 q
b0 <
b0 !"
b0 I
b0 k
b0 @
b0 j
b11000000100000 ^
b11000000100000 w
b11000000011000 7
b11000000011000 t
b11000000011000 5"
b11000000010100 8
b11000000010100 v
b0 E
b0 7"
b11000000010100 D
b11000000010100 -"
b11000000010100 8"
b100 [
b100 0"
0R
1U
b11 a
b11 d
b11 ."
1S
1!
#5500
0!
#6000
b111100000000111111110010101011 9
b111100000000111111110010101011 6"
b111100000000111111110010101011 :"
b111100000000111111110010101011 ;"
b110 9"
b11000000011100 7
b11000000011100 t
b11000000011100 5"
b11000000011000 8
b11000000011000 v
b11000000101000 6
b11000000101000 u
b11000000101000 {
b0 [
b0 0"
1R
0U
b10001 a
b10001 d
b10001 ."
0S
b11000000011000 ^
b11000000011000 w
b11000000011000 ]
b11000000011000 /"
b11000000011000 D
b11000000011000 -"
b11000000011000 8"
1!
#6500
0!
#7000
b110100000000111100101010111100 9
b110100000000111100101010111100 6"
b110100000000111100101010111100 :"
b110100000000111100101010111100 ;"
b11111100101010110000000000000000 K
b11111100101010110000000000000000 s
b11111100101010110000000000000000 ("
bx G
bx %"
bx *"
b1 M
b1 m
b1 '"
b10 J
b10 n
b10 r
0l
1L
1=
b111 9"
b1111110010101011 F
b1111110010101011 q
b11111 >
b11111 +"
b11 ;
b11 ""
b11 ,"
b101011 I
b101011 k
b10010 :
b1111 @
b1111 j
b11000000100000 7
b11000000100000 t
b11000000100000 5"
b11000000011100 8
b11000000011100 v
b111100000000111111110010101011 E
b111100000000111111110010101011 7"
b11000000011100 D
b11000000011100 -"
b11000000011100 8"
b11000000011000 6
b11000000011000 u
b11000000011000 {
1!
#7500
0!
#8000
b110100000001001111111111111111 9
b110100000001001111111111111111 6"
b110100000001001111111111111111 :"
b110100000001001111111111111111 ;"
b1100101010111100 K
b1100101010111100 s
b1100101010111100 ("
b110 M
b110 m
b110 '"
b0 J
b0 n
b0 r
b1000 9"
0_
b11111100101010110000000000000000 `
b11111100101010110000000000000000 e
b11111100101010110000000000000000 x
b11111100101010110000000000000000 P
b11111100101010110000000000000000 b
b11 O
b11 y
b1100101010111100 F
b1100101010111100 q
b11001 >
b11001 +"
b111100 I
b111100 k
b1010 :
b1101 @
b1101 j
b11000000100100 7
b11000000100100 t
b11000000100100 5"
b11000000100000 8
b11000000100000 v
bx 2
bx i
bx }
b11000000100000 6
b11000000100000 u
b11000000100000 {
b11111100101010110000000000000000 [
b11111100101010110000000000000000 0"
1\
b1 a
b1 d
b1 ."
1S
bx Y
bx z
bx 2"
b11 Q
b11 4"
b11111 T
b11111 3"
b11110010101011000011000000100000 ^
b11110010101011000011000000100000 w
b11000000100000 ]
b11000000100000 /"
b110100000000111100101010111100 E
b110100000000111100101010111100 7"
b11000000100000 D
b11000000100000 -"
b11000000100000 8"
1!
#8500
0!
#9000
b0 9
b0 6"
b0 :"
b0 ;"
b1111111111111111 K
b1111111111111111 s
b1111111111111111 ("
b1100101010111100 `
b1100101010111100 e
b1100101010111100 x
b1001 9"
b1111111111111111 F
b1111111111111111 q
b11111 >
b11111 +"
b100 ;
b100 ""
b100 ,"
b111111 I
b111111 k
b11111 :
b1100101010111100 P
b1100101010111100 b
b110101101100010000 ^
b110101101100010000 w
b11000000101000 7
b11000000101000 t
b11000000101000 5"
b11000000100100 8
b11000000100100 v
b110100000001001111111111111111 E
b110100000001001111111111111111 7"
b11000000100100 D
b11000000100100 -"
b11000000100100 8"
b1100101010111100 [
b1100101010111100 0"
b110 a
b110 d
b110 ."
b11001 T
b11001 3"
0+
b11111100101010110000000000000000 3
b11111100101010110000000000000000 |
b11111100101010110000000000000000 <"
b11 1
b11 ~
b11 ="
b11110010101011000011000000100000 6
b11110010101011000011000000100000 u
b11110010101011000011000000100000 {
1!
#9500
b11111100101010110000000000000000 ?"
b11 A"
0!
#10000
b11111100101010110000000000000000 (
b11111100101010110000000000000000 #"
b11111100101010110000000000000000 '
b11111100101010110000000000000000 @"
b11 )
b11 $"
b11 B"
b1111111111111111 `
b1111111111111111 e
b1111111111111111 x
b0 K
b0 s
b0 ("
b0 G
b0 %"
b0 *"
b10001 M
b10001 m
b10001 '"
1l
0L
0=
b1010 9"
b11100 g
b1111111111111111 P
b1111111111111111 b
b100 O
b100 y
b0 F
b0 q
b0 >
b0 +"
b0 ;
b0 ""
b0 ,"
b0 I
b0 k
b0 :
b0 @
b0 j
b11000000101100 7
b11000000101100 t
b11000000101100 5"
b11000000101000 8
b11000000101000 v
b1100101010111100 3
b1100101010111100 |
b1100101010111100 <"
b110101101100011000 6
b110101101100011000 u
b110101101100011000 {
b1111111111111111 [
b1111111111111111 0"
b100 Q
b100 4"
b11111 T
b11111 3"
b1000011000000100100 ^
b1000011000000100100 w
b11000000101000 ]
b11000000101000 /"
b0 E
b0 7"
b11000000101000 D
b11000000101000 -"
b11000000101000 8"
1!
#10500
b1100101010111100 ?"
0!
#11000
b1100101010111100 (
b1100101010111100 #"
b1100101010111100 '
b1100101010111100 @"
1_
b0 `
b0 e
b0 x
b1011 9"
b11000000101000 ^
b11000000101000 w
b0 P
b0 b
b0 O
b0 y
b11111 g
b11000000110000 7
b11000000110000 t
b11000000110000 5"
b11000000101100 8
b11000000101100 v
b11000000101100 D
b11000000101100 -"
b11000000101100 8"
b0 [
b0 0"
0\
b10001 a
b10001 d
b10001 ."
0S
b0 Y
b0 z
b0 2"
b0 Q
b0 4"
b0 T
b0 3"
b1111111111111111 3
b1111111111111111 |
b1111111111111111 <"
b100 1
b100 ~
b100 ="
b1000011000000100100 6
b1000011000000100100 u
b1000011000000100100 {
1!
#11500
b1111111111111111 ?"
b100 A"
0!
#12000
b1111111111111111 (
b1111111111111111 #"
b1111111111111111 '
b1111111111111111 @"
b100 )
b100 $"
b100 B"
b1101 9
b1101 6"
b1101 :"
b1101 ;"
b1100 9"
b0 g
b11000000110100 7
b11000000110100 t
b11000000110100 5"
b11000000110000 8
b11000000110000 v
1+
b0 2
b0 i
b0 }
b0 3
b0 |
b0 <"
b0 1
b0 ~
b0 ="
b11000000110000 6
b11000000110000 u
b11000000110000 {
b11000000110000 ^
b11000000110000 w
b11000000110000 ]
b11000000110000 /"
b11000000110000 D
b11000000110000 -"
b11000000110000 8"
1!
#12500
b0 ?"
b0 A"
0!
#13000
b0 (
b0 #"
b0 '
b0 @"
b0 )
b0 $"
b0 B"
bx 9
bx 6"
bx :"
bx ;"
b1101 K
b1101 s
b1101 ("
0l
b1101 9"
b1101 F
b1101 q
b1101 I
b1101 k
b11000000111000 7
b11000000111000 t
b11000000111000 5"
b11000000110100 8
b11000000110100 v
b1101 E
b1101 7"
b11000000110100 D
b11000000110100 -"
b11000000110100 8"
1!
