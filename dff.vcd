$date
	Tue Apr  3 19:35:55 2018
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module Mips_tb $end
$var reg 1 ! clk $end
$var reg 11 " i [10:0] $end
$var reg 1 # rst $end
$scope module U_mips $end
$var wire 1 ! clock $end
$var wire 1 $ pRegWrite $end
$var wire 1 # reset $end
$var wire 1 % WB_last_memToReg $end
$var wire 32 & WB_last_memOut [31:0] $end
$var wire 32 ' WB_last_aluOut [31:0] $end
$var wire 32 ( WB_ID_writeBack [31:0] $end
$var wire 5 ) WB_ID_gprWriteAddr [4:0] $end
$var wire 1 * WB_ID_gprWrite $end
$var wire 1 + M_last_zero $end
$var wire 1 , M_last_regW $end
$var wire 1 - M_last_pcSel $end
$var wire 1 . M_last_memW $end
$var wire 1 / M_last_memToR $end
$var wire 1 0 M_last_memR $end
$var wire 5 1 M_last_gprDes [4:0] $end
$var wire 32 2 M_last_gprB [31:0] $end
$var wire 32 3 M_last_aluResult [31:0] $end
$var wire 32 4 M_dmResult_next [31:0] $end
$var wire 1 5 M_IF_doBranch $end
$var wire 32 6 M_IF_BPC [31:0] $end
$var wire 32 7 IF_pc_return [31:0] $end
$var wire 32 8 IF_pc_im [31:0] $end
$var wire 32 9 IF_ir_next [31:0] $end
$var wire 6 : ID_shamt_next [5:0] $end
$var wire 5 ; ID_rt_gpr [4:0] $end
$var wire 5 < ID_rs_gpr [4:0] $end
$var wire 1 = ID_regDst_next $end
$var wire 5 > ID_rd_gpr [4:0] $end
$var wire 1 ? ID_pcSel_next $end
$var wire 6 @ ID_opcode_ctrl [5:0] $end
$var wire 1 A ID_memW_next $end
$var wire 1 B ID_memToR_next $end
$var wire 1 C ID_memR_next $end
$var wire 32 D ID_last_PC [31:0] $end
$var wire 32 E ID_last_IR [31:0] $end
$var wire 16 F ID_imm_ext [15:0] $end
$var wire 32 G ID_gprB_next [31:0] $end
$var wire 32 H ID_gprA_next [31:0] $end
$var wire 6 I ID_funct_ctrl [5:0] $end
$var wire 2 J ID_extop_ext [1:0] $end
$var wire 32 K ID_extended_next [31:0] $end
$var wire 1 L ID_aluSrc_next $end
$var wire 5 M ID_aluCtrl_next [4:0] $end
$var wire 1 N ID_RegW_next $end
$var wire 5 O EX_muxR_next [4:0] $end
$var wire 32 P EX_muxB_alu [31:0] $end
$var wire 5 Q EX_last_rt_mux [4:0] $end
$var wire 1 R EX_last_regW $end
$var wire 1 S EX_last_regDst_muxR $end
$var wire 5 T EX_last_rd_mux [4:0] $end
$var wire 1 U EX_last_pcSel $end
$var wire 1 V EX_last_memW $end
$var wire 1 W EX_last_memToR $end
$var wire 1 X EX_last_memR $end
$var wire 32 Y EX_last_gprB_muxB [31:0] $end
$var wire 32 Z EX_last_gprA_alu [31:0] $end
$var wire 32 [ EX_last_ext [31:0] $end
$var wire 1 \ EX_last_aluSrc_muxB $end
$var wire 32 ] EX_last_PC [31:0] $end
$var wire 32 ^ EX_branchAddr_next [31:0] $end
$var wire 1 _ EX_aluZero_next $end
$var wire 32 ` EX_aluResult_next [31:0] $end
$var wire 5 a EX_aluCtrl_alu [4:0] $end
$scope module ALU $end
$var wire 32 b DataIn2 [31:0] $end
$var wire 32 c DataIn1 [31:0] $end
$var wire 5 d AluCtrl [4:0] $end
$var reg 32 e AluResult [31:0] $end
$var reg 1 _ Zero $end
$var reg 32 f temp [31:0] $end
$upscope $end
$scope module DMEM $end
$var wire 5 g DataAdr [4:0] $end
$var wire 32 h DataOut [31:0] $end
$var wire 1 ! clk $end
$var wire 32 i DataIn [31:0] $end
$var wire 1 . DMemW $end
$var wire 1 0 DMemR $end
$upscope $end
$scope module ELOHIM $end
$var wire 6 j OpCode [5:0] $end
$var wire 6 k funct [5:0] $end
$var reg 1 l AluShift $end
$var reg 5 m Aluctrl [4:0] $end
$var reg 1 L Alusrc $end
$var reg 1 ? Branch $end
$var reg 2 n ExtOp [1:0] $end
$var reg 1 B Mem2R $end
$var reg 1 C MemR $end
$var reg 1 A MemW $end
$var reg 1 o NBranch $end
$var reg 1 = RegDst $end
$var reg 1 N RegW $end
$var reg 1 p jump $end
$upscope $end
$scope module EXT $end
$var wire 16 q DataIn [15:0] $end
$var wire 2 r ExtOp [1:0] $end
$var reg 32 s ExtOut [31:0] $end
$upscope $end
$scope module PC_UNIT $end
$var wire 1 ! Clk $end
$var wire 1 # PcReSet $end
$var wire 1 5 PcSel $end
$var wire 32 t nextPC [31:0] $end
$var wire 32 u branchAddr [31:0] $end
$var reg 32 v PC [31:0] $end
$var reg 32 w realBranchAddr [31:0] $end
$upscope $end
$scope module P_EXMEM $end
$var wire 32 x BPC_in [31:0] $end
$var wire 1 $ Write $end
$var wire 32 y aluOut_in [31:0] $end
$var wire 1 ! clk $end
$var wire 5 z gprDes_in [4:0] $end
$var wire 1 # rst $end
$var wire 1 _ zero_in $end
$var wire 1 R regW_in $end
$var wire 1 U pcSel_in $end
$var wire 1 V memW_in $end
$var wire 1 W memToR_in $end
$var wire 1 X memR_in $end
$var wire 32 { gprB_in [31:0] $end
$var reg 32 | BPC_mid [31:0] $end
$var reg 32 } BPC_out [31:0] $end
$var reg 32 ~ aluOut_mid [31:0] $end
$var reg 32 !" aluOut_out [31:0] $end
$var reg 32 "" gprB_mid [31:0] $end
$var reg 32 #" gprB_out [31:0] $end
$var reg 5 $" gprDes_mid [4:0] $end
$var reg 5 %" gprDes_out [4:0] $end
$var reg 1 &" memR_mid $end
$var reg 1 0 memR_out $end
$var reg 1 '" memToR_mid $end
$var reg 1 / memToR_out $end
$var reg 1 (" memW_mid $end
$var reg 1 . memW_out $end
$var reg 1 )" pcSel_mid $end
$var reg 1 - pcSel_out $end
$var reg 1 *" regW_mid $end
$var reg 1 , regW_out $end
$var reg 1 +" zero_mid $end
$var reg 1 + zero_out $end
$upscope $end
$scope module P_GPR $end
$var wire 5 ," ReSel1 [4:0] $end
$var wire 5 -" ReSel2 [4:0] $end
$var wire 32 ." WData [31:0] $end
$var wire 1 ! clk $end
$var wire 5 /" WeSel [4:0] $end
$var wire 1 * WE $end
$var wire 32 0" DataOut2 [31:0] $end
$var wire 32 1" DataOut1 [31:0] $end
$upscope $end
$scope module P_IDEX $end
$var wire 5 2" ALUop_in [4:0] $end
$var wire 1 L ALUsrc_in $end
$var wire 1 ? Branch_in $end
$var wire 1 C Mread_in $end
$var wire 1 B MtoR_in $end
$var wire 1 A Mwrite_in $end
$var wire 1 = RegDst_in $end
$var wire 1 N RegWrite_in $end
$var wire 1 $ Write $end
$var wire 1 ! clk $end
$var wire 32 3" ext_in [31:0] $end
$var wire 32 4" gprA_in [31:0] $end
$var wire 32 5" gprB_in [31:0] $end
$var wire 5 6" rd_in [4:0] $end
$var wire 1 # rst $end
$var wire 5 7" rt_in [4:0] $end
$var wire 32 8" PC_in [31:0] $end
$var reg 5 9" ALUop_mid [4:0] $end
$var reg 5 :" ALUop_out [4:0] $end
$var reg 1 ;" ALUsrc_mid $end
$var reg 1 \ ALUsrc_out $end
$var reg 1 <" Branch_mid $end
$var reg 1 U Branch_out $end
$var reg 1 =" Mread_mid $end
$var reg 1 X Mread_out $end
$var reg 1 >" MtoR_mid $end
$var reg 1 W MtoR_out $end
$var reg 1 ?" Mwrite_mid $end
$var reg 1 V Mwrite_out $end
$var reg 32 @" PC_mid [31:0] $end
$var reg 32 A" PC_out [31:0] $end
$var reg 1 B" RegDst_mid $end
$var reg 1 S RegDst_out $end
$var reg 1 C" RegWrite_mid $end
$var reg 1 R RegWrite_out $end
$var reg 32 D" ext_mid [31:0] $end
$var reg 32 E" ext_out [31:0] $end
$var reg 32 F" gprA_mid [31:0] $end
$var reg 32 G" gprA_out [31:0] $end
$var reg 32 H" gprB_mid [31:0] $end
$var reg 32 I" gprB_out [31:0] $end
$var reg 5 J" rd_mid [4:0] $end
$var reg 5 K" rd_out [4:0] $end
$var reg 5 L" rt_mid [4:0] $end
$var reg 5 M" rt_out [4:0] $end
$upscope $end
$scope module P_IFID $end
$var wire 32 N" PC_in [31:0] $end
$var wire 1 $ Write $end
$var wire 1 ! clk $end
$var wire 1 # rst $end
$var wire 32 O" IR_in [31:0] $end
$var reg 32 P" IR_out [31:0] $end
$var reg 32 Q" PC_out [31:0] $end
$upscope $end
$scope module P_IM $end
$var wire 5 R" ImAdress [4:0] $end
$var wire 32 S" OpCode [31:0] $end
$var reg 32 T" Opcode [31:0] $end
$upscope $end
$scope module P_MEMWB $end
$var wire 1 $ Write $end
$var wire 32 U" aluOut_in [31:0] $end
$var wire 1 ! clk $end
$var wire 5 V" gprDes_in [4:0] $end
$var wire 32 W" memOut_in [31:0] $end
$var wire 1 / memToR_in $end
$var wire 1 , regW_in $end
$var wire 1 # rst $end
$var reg 32 X" aluOut_mid [31:0] $end
$var reg 32 Y" aluOut_out [31:0] $end
$var reg 5 Z" gprDes_mid [4:0] $end
$var reg 5 [" gprDes_out [4:0] $end
$var reg 32 \" memOut_mid [31:0] $end
$var reg 32 ]" memOut_out [31:0] $end
$var reg 1 ^" memToR_mid $end
$var reg 1 % memToR_out $end
$var reg 1 _" regW_mid $end
$var reg 1 * regW_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module mux16 $end
$var wire 8 `" d0 [7:0] $end
$var wire 8 a" d1 [7:0] $end
$var wire 8 b" d10 [7:0] $end
$var wire 8 c" d11 [7:0] $end
$var wire 8 d" d12 [7:0] $end
$var wire 8 e" d13 [7:0] $end
$var wire 8 f" d14 [7:0] $end
$var wire 8 g" d15 [7:0] $end
$var wire 8 h" d2 [7:0] $end
$var wire 8 i" d3 [7:0] $end
$var wire 8 j" d4 [7:0] $end
$var wire 8 k" d5 [7:0] $end
$var wire 8 l" d6 [7:0] $end
$var wire 8 m" d7 [7:0] $end
$var wire 8 n" d8 [7:0] $end
$var wire 8 o" d9 [7:0] $end
$var wire 4 p" s [3:0] $end
$var wire 8 q" y [7:0] $end
$var reg 8 r" y_r [7:0] $end
$upscope $end
$scope module mux2 $end
$var wire 8 s" d0 [7:0] $end
$var wire 8 t" d1 [7:0] $end
$var wire 1 u" s $end
$var wire 8 v" y [7:0] $end
$upscope $end
$scope module mux4 $end
$var wire 8 w" d0 [7:0] $end
$var wire 8 x" d1 [7:0] $end
$var wire 8 y" d2 [7:0] $end
$var wire 8 z" d3 [7:0] $end
$var wire 2 {" s [1:0] $end
$var wire 8 |" y [7:0] $end
$var reg 8 }" y_r [7:0] $end
$upscope $end
$scope module mux8 $end
$var wire 8 ~" d0 [7:0] $end
$var wire 8 !# d1 [7:0] $end
$var wire 8 "# d2 [7:0] $end
$var wire 8 ## d3 [7:0] $end
$var wire 8 $# d4 [7:0] $end
$var wire 8 %# d5 [7:0] $end
$var wire 8 &# d6 [7:0] $end
$var wire 8 '# d7 [7:0] $end
$var wire 3 (# s [2:0] $end
$var wire 8 )# y [7:0] $end
$var reg 8 *# y_r [7:0] $end
$upscope $end
$enddefinitions $end
#250
$dumpvars
bx *#
bx )#
bz (#
bz '#
bz &#
bz %#
bz $#
bz ##
bz "#
bz !#
bz ~"
bx }"
bx |"
bz {"
bz z"
bz y"
bz x"
bz w"
bz v"
zu"
bz t"
bz s"
bx r"
bx q"
bz p"
bz o"
bz n"
bz m"
bz l"
bz k"
bz j"
bz i"
bz h"
bz g"
bz f"
bz e"
bz d"
bz c"
bz b"
bz a"
bz `"
x_"
x^"
bx ]"
bx \"
bx ["
bx Z"
bx Y"
bx X"
bx W"
bx V"
bx U"
b110100000000010000000000000000 T"
b110100000000010000000000000000 S"
b0 R"
b11000000000100 Q"
b110100000000010000000000000000 P"
b110100000000010000000000000000 O"
b11000000000100 N"
bx M"
bx L"
bx K"
bx J"
bx I"
bx H"
bx G"
bx F"
bx E"
bx D"
xC"
xB"
bx A"
bx @"
x?"
x>"
x="
x<"
x;"
bx :"
bx 9"
b11000000000100 8"
b1 7"
b0 6"
bx 5"
b0 4"
b0 3"
b110 2"
b0 1"
bx 0"
bx /"
bx ."
b1 -"
b0 ,"
x+"
x*"
x)"
x("
x'"
x&"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
b0 y
bx x
bx w
b11000000000000 v
bx u
b11000000000100 t
b0 s
b0 r
b0 q
0p
0o
b0 n
b110 m
0l
b0 k
b1101 j
bx i
bx h
bx g
b0 f
b0 e
bx d
bx c
bx b
bx a
b0 `
0_
bx ^
bx ]
x\
bx [
bx Z
bx Y
xX
xW
xV
xU
bx T
xS
xR
bx Q
bx P
bx O
1N
b110 M
1L
b0 K
b0 J
b0 I
b0 H
bx G
b0 F
b110100000000010000000000000000 E
b11000000000100 D
0C
0B
0A
b1101 @
0?
b0 >
1=
b0 <
b1 ;
b0 :
b110100000000010000000000000000 9
b11000000000000 8
b11000000000100 7
bx 6
x5
bx 4
bx 3
bx 2
bx 1
x0
x/
x.
x-
x,
x+
x*
bx )
bx (
bx '
bx &
x%
1$
0#
b10100 "
1!
$end
#500
b0 D"
0>"
1C"
0?"
0="
0<"
1;"
b110 9"
1B"
b0 F"
b1 L"
b0 J"
b11000000000100 @"
0+"
b0 ~
0!
#1000
05
b11000000000100 ^
b11000000000100 x
b0 P
b0 b
1_
b0 `
b0 e
b0 y
b1 O
b1 z
b0 g
b0 [
b0 E"
0W
1R
0V
0X
0U
1\
b110 a
b110 d
b110 :"
1S
b0 Z
b0 c
b0 G"
b1 Q
b1 M"
b0 T
b0 K"
b11000000000100 ]
b11000000000100 A"
0+
b0 3
b0 !"
b0 U"
1!
#1500
b0 X"
0'"
1*"
0("
0&"
0)"
1+"
b1 $"
b11000000000100 |
0!
#2000
b0 '
b0 Y"
b0 9
b0 O"
b0 S"
b0 T"
b1 R"
b11000000001000 7
b11000000001000 t
b11000000001000 N"
b11000000000100 8
b11000000000100 v
0/
1,
0.
00
0-
1+
b1 1
b1 %"
b1 V"
b11000000000100 6
b11000000000100 u
b11000000000100 }
1!
#2500
b11000000000100 w
0^"
1_"
b1 Z"
0!
#3000
b0 (
b0 ."
0%
1*
b1 )
b1 /"
b1 ["
b0 G
b0 0"
b0 5"
b10001 M
b10001 m
b10001 2"
1l
0L
0=
b10 R"
b0 ;
b0 -"
b0 7"
b0 @
b0 j
b11000000001100 7
b11000000001100 t
b11000000001100 N"
b11000000001000 8
b11000000001000 v
b0 E
b0 P"
b11000000001000 D
b11000000001000 8"
b11000000001000 Q"
1!
#3500
0;"
b10001 9"
0B"
b0 H"
b0 L"
b11000000001000 @"
0!
#4000
b10000001000000000000000000110 9
b10000001000000000000000000110 O"
b10000001000000000000000000110 S"
b10000001000000000000000000110 T"
b11 R"
b0 O
b0 z
b11000000010000 7
b11000000010000 t
b11000000010000 N"
b11000000001100 8
b11000000001100 v
0\
b10001 a
b10001 d
b10001 :"
0S
b0 Y
b0 {
b0 I"
b0 Q
b0 M"
b11000000001000 ^
b11000000001000 x
b11000000001000 ]
b11000000001000 A"
b11000000001100 D
b11000000001100 8"
b11000000001100 Q"
1!
#4500
b11000000001100 @"
b0 ""
b0 $"
b11000000001000 |
0!
#5000
b111100000000111111110010101011 9
b111100000000111111110010101011 O"
b111100000000111111110010101011 S"
b111100000000111111110010101011 T"
b110 K
b110 s
b110 3"
b1 J
b1 n
b1 r
b11 M
b11 m
b11 2"
0l
0N
1=
1?
b100 R"
b110 F
b110 q
b1 <
b1 ,"
b110 I
b110 k
b100 @
b100 j
b11000000010100 7
b11000000010100 t
b11000000010100 N"
b11000000010000 8
b11000000010000 v
b10000001000000000000000000110 E
b10000001000000000000000000110 P"
b11000000010000 D
b11000000010000 8"
b11000000010000 Q"
b11000000001100 ^
b11000000001100 x
b11000000001100 ]
b11000000001100 A"
b0 2
b0 i
b0 #"
b0 1
b0 %"
b0 V"
b11000000001000 6
b11000000001000 u
b11000000001000 }
1!
#5500
b0 Z"
b11000000001100 |
b110 D"
0C"
1<"
b11 9"
1B"
b11000000010000 @"
b11000000001000 w
0!
#6000
b0 )
b0 /"
b0 ["
b110100000000111100101010111100 9
b110100000000111100101010111100 O"
b110100000000111100101010111100 S"
b110100000000111100101010111100 T"
b11111100101010110000000000000000 K
b11111100101010110000000000000000 s
b11111100101010110000000000000000 3"
bx G
bx 0"
bx 5"
b1 M
b1 m
b1 2"
b10 J
b10 n
b10 r
1L
1N
0?
b101 R"
b1111110010101011 F
b1111110010101011 q
b11111 >
b11111 6"
b11 ;
b11 -"
b11 7"
b0 <
b0 ,"
b101011 I
b101011 k
b10010 :
b1111 @
b1111 j
b11000000011000 7
b11000000011000 t
b11000000011000 N"
b11000000010100 8
b11000000010100 v
b11000000001100 6
b11000000001100 u
b11000000001100 }
b110 [
b110 E"
0R
1U
b11 a
b11 d
b11 :"
1S
b11000000101000 ^
b11000000101000 x
b11000000010000 ]
b11000000010000 A"
b111100000000111111110010101011 E
b111100000000111111110010101011 P"
b11000000010100 D
b11000000010100 8"
b11000000010100 Q"
1!
#6500
b11000000001100 w
b11111100101010110000000000000000 D"
1C"
0<"
1;"
b1 9"
bx H"
b11 L"
b11111 J"
b11000000010100 @"
0*"
1)"
b11000000101000 |
0!
#7000
b0 9
b0 O"
b0 S"
b0 T"
b1100101010111100 K
b1100101010111100 s
b1100101010111100 3"
b110 M
b110 m
b110 2"
b0 J
b0 n
b0 r
15
b110 R"
b1100101010111100 F
b1100101010111100 q
b11001 >
b11001 6"
b111100 I
b111100 k
b1010 :
b1101 @
b1101 j
0_
b11111100101010110000000000000000 `
b11111100101010110000000000000000 e
b11111100101010110000000000000000 y
b11111100101010110000000000000000 P
b11111100101010110000000000000000 b
b11 O
b11 z
b11000000011100 7
b11000000011100 t
b11000000011100 N"
b11000000011000 8
b11000000011000 v
b110100000000111100101010111100 E
b110100000000111100101010111100 P"
b11000000011000 D
b11000000011000 8"
b11000000011000 Q"
b11111100101010110000000000000000 [
b11111100101010110000000000000000 E"
1R
0U
1\
b1 a
b1 d
b1 :"
bx Y
bx {
bx I"
b11 Q
b11 M"
b11111 T
b11111 K"
b11110010101011000011000000010100 ^
b11110010101011000011000000010100 x
b11000000010100 ]
b11000000010100 A"
0,
1-
b11000000101000 6
b11000000101000 u
b11000000101000 }
1!
#7500
0_"
1*"
0)"
0+"
bx ""
b11111100101010110000000000000000 ~
b11 $"
b11110010101011000011000000010100 |
b1100101010111100 D"
b110 9"
b11001 J"
b11000000011000 @"
b11000000101000 w
0!
#8000
0*
b110100000001001111111111111111 9
b110100000001001111111111111111 O"
b110100000001001111111111111111 S"
b110100000001001111111111111111 T"
05
b1100101010111100 `
b1100101010111100 e
b1100101010111100 y
b0 K
b0 s
b0 3"
b0 G
b0 0"
b0 5"
b10001 M
b10001 m
b10001 2"
1l
0L
0=
b1010 R"
b1100101010111100 P
b1100101010111100 b
b0 F
b0 q
b0 >
b0 6"
b0 ;
b0 -"
b0 7"
b0 I
b0 k
b0 :
b0 @
b0 j
b11000000101100 7
b11000000101100 t
b11000000101100 N"
b11000000101000 8
b11000000101000 v
1,
0-
0+
bx 2
bx i
bx #"
b11111100101010110000000000000000 3
b11111100101010110000000000000000 !"
b11111100101010110000000000000000 U"
b11 1
b11 %"
b11 V"
b11110010101011000011000000010100 6
b11110010101011000011000000010100 u
b11110010101011000011000000010100 }
b1100101010111100 [
b1100101010111100 E"
b110 a
b110 d
b110 :"
b11001 T
b11001 K"
b110101101100001000 ^
b110101101100001000 x
b11000000011000 ]
b11000000011000 A"
b0 E
b0 P"
b11000000011100 D
b11000000011100 8"
b11000000011100 Q"
1!
#8500
b11110010101011000011000000010100 w
b0 D"
0;"
b10001 9"
0B"
b0 H"
b0 L"
b0 J"
b11000000011100 @"
b1100101010111100 ~
b110101101100001000 |
1_"
b11111100101010110000000000000000 X"
b11 Z"
0!
#9000
b11111100101010110000000000000000 (
b11111100101010110000000000000000 ."
1*
b11111100101010110000000000000000 '
b11111100101010110000000000000000 Y"
b11 )
b11 /"
b11 ["
b0 9
b0 O"
b0 S"
b0 T"
b1111111111111111 K
b1111111111111111 s
b1111111111111111 3"
bx G
bx 0"
bx 5"
b110 M
b110 m
b110 2"
0l
1L
1=
1_
b0 `
b0 e
b0 y
b1011 R"
b1111111111111111 F
b1111111111111111 q
b11111 >
b11111 6"
b100 ;
b100 -"
b100 7"
b111111 I
b111111 k
b11111 :
b1101 @
b1101 j
b0 P
b0 b
b0 O
b0 z
b11100 g
b11000000110000 7
b11000000110000 t
b11000000110000 N"
b11000000101100 8
b11000000101100 v
b110100000001001111111111111111 E
b110100000001001111111111111111 P"
b11000000101100 D
b11000000101100 8"
b11000000101100 Q"
b0 [
b0 E"
0\
b10001 a
b10001 d
b10001 :"
0S
b0 Y
b0 {
b0 I"
b0 Q
b0 M"
b0 T
b0 K"
b11000000011100 ^
b11000000011100 x
b11000000011100 ]
b11000000011100 A"
b1100101010111100 3
b1100101010111100 !"
b1100101010111100 U"
b110101101100001000 6
b110101101100001000 u
b110101101100001000 }
1!
#9500
b1100101010111100 X"
1+"
b0 ""
b0 ~
b0 $"
b11000000011100 |
b1111111111111111 D"
1;"
b110 9"
1B"
bx H"
b100 L"
b11111 J"
b11000000101100 @"
b110101101100001000 w
0!
#10000
b1100101010111100 (
b1100101010111100 ."
b1100101010111100 '
b1100101010111100 Y"
b0 K
b0 s
b0 3"
b0 G
b0 0"
b0 5"
b10001 M
b10001 m
b10001 2"
1l
0L
0=
b1100 R"
b0 g
0_
b1111111111111111 `
b1111111111111111 e
b1111111111111111 y
b1111111111111111 P
b1111111111111111 b
b100 O
b100 z
b0 F
b0 q
b0 >
b0 6"
b0 ;
b0 -"
b0 7"
b0 I
b0 k
b0 :
b0 @
b0 j
b11000000110100 7
b11000000110100 t
b11000000110100 N"
b11000000110000 8
b11000000110000 v
1+
b0 2
b0 i
b0 #"
b0 3
b0 !"
b0 U"
b0 1
b0 %"
b0 V"
b11000000011100 6
b11000000011100 u
b11000000011100 }
b1111111111111111 [
b1111111111111111 E"
1\
b110 a
b110 d
b110 :"
1S
bx Y
bx {
bx I"
b100 Q
b100 M"
b11111 T
b11111 K"
b1000011000000101000 ^
b1000011000000101000 x
b11000000101100 ]
b11000000101100 A"
b0 E
b0 P"
b11000000110000 D
b11000000110000 8"
b11000000110000 Q"
1!
#10500
b11000000011100 w
b0 D"
0;"
b10001 9"
0B"
b0 H"
b0 L"
b0 J"
b11000000110000 @"
0+"
bx ""
b1111111111111111 ~
b100 $"
b1000011000000101000 |
b0 X"
b0 Z"
0!
#11000
b0 (
b0 ."
b0 '
b0 Y"
b0 )
b0 /"
b0 ["
1_
b0 `
b0 e
b0 y
b1101 R"
b0 P
b0 b
b0 O
b0 z
b11111 g
b11000000111000 7
b11000000111000 t
b11000000111000 N"
b11000000110100 8
b11000000110100 v
b11000000110100 D
b11000000110100 8"
b11000000110100 Q"
b0 [
b0 E"
0\
b10001 a
b10001 d
b10001 :"
0S
b0 Y
b0 {
b0 I"
b0 Q
b0 M"
b0 T
b0 K"
b11000000110000 ^
b11000000110000 x
b11000000110000 ]
b11000000110000 A"
0+
bx 2
bx i
bx #"
b1111111111111111 3
b1111111111111111 !"
b1111111111111111 U"
b100 1
b100 %"
b100 V"
b1000011000000101000 6
b1000011000000101000 u
b1000011000000101000 }
1!
#11500
b1111111111111111 X"
b100 Z"
1+"
b0 ""
b0 ~
b0 $"
b11000000110000 |
b11000000110100 @"
b1000011000000101000 w
0!
#12000
b1111111111111111 (
b1111111111111111 ."
b1111111111111111 '
b1111111111111111 Y"
b100 )
b100 /"
b100 ["
b1110 R"
b0 g
b11000000111100 7
b11000000111100 t
b11000000111100 N"
b11000000111000 8
b11000000111000 v
1+
b0 2
b0 i
b0 #"
b0 3
b0 !"
b0 U"
b0 1
b0 %"
b0 V"
b11000000110000 6
b11000000110000 u
b11000000110000 }
b11000000110100 ^
b11000000110100 x
b11000000110100 ]
b11000000110100 A"
b11000000111000 D
b11000000111000 8"
b11000000111000 Q"
1!
#12500
b11000000110000 w
b11000000111000 @"
b11000000110100 |
b0 X"
b0 Z"
0!
#13000
b0 (
b0 ."
b0 '
b0 Y"
b0 )
b0 /"
b0 ["
b1101 9
b1101 O"
b1101 S"
b1101 T"
b1111 R"
b11000001000000 7
b11000001000000 t
b11000001000000 N"
b11000000111100 8
b11000000111100 v
b11000000111100 D
b11000000111100 8"
b11000000111100 Q"
b11000000111000 ^
b11000000111000 x
b11000000111000 ]
b11000000111000 A"
b11000000110100 6
b11000000110100 u
b11000000110100 }
1!
#13500
b11000000111000 |
b11000000111100 @"
b11000000110100 w
0!
#14000
bx 9
bx O"
bx S"
bx T"
b1101 K
b1101 s
b1101 3"
0l
b10000 R"
b1101 F
b1101 q
b1101 I
b1101 k
b11000001000100 7
b11000001000100 t
b11000001000100 N"
b11000001000000 8
b11000001000000 v
b11000000111000 6
b11000000111000 u
b11000000111000 }
b11000000111100 ^
b11000000111100 x
b11000000111100 ]
b11000000111100 A"
b1101 E
b1101 P"
b11000001000000 D
b11000001000000 8"
b11000001000000 Q"
1!
